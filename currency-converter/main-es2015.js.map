{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/cx-input/cx-input.component.ts","./src/app/components/cx-input/cx-input.component.html","./src/app/components/cx-select/cx-select.component.ts","./src/app/components/cx-select/cx-select.component.html","./src/app/currency-converter-form/currency-converter-form.component.ts","./src/app/currency-converter-form/currency-converter-form.component.html","./src/app/services/currency-operations.service.ts","./src/app/services/currency-request.service.ts","./src/app/store/currency-converter.reducer.ts","./src/app/validators/currency-converter-validator.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  \n}\n","<section class=\"currency-converter\">\n     <div class=\"currency-converter__innerblock\"> \n        <app-currency-converter-form></app-currency-converter-form>\n     </div> \n</section>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http'\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { StoreModule } from '@ngrx/store'\n\nimport { NglModule } from 'ng-lightning';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { CurrencyOperationsService } from './services/currency-operations.service';\nimport { CurrencyRequestService } from './services/currency-request.service';\nimport { updateCurrencyData } from './store/currency-converter.reducer';\n\nimport { CxSelectComponent } from './components/cx-select/cx-select.component';\nimport { CxInputComponent } from './components/cx-input/cx-input.component';\nimport { CurrencyConverterFormComponent } from './currency-converter-form/currency-converter-form.component'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CurrencyConverterFormComponent,\n    CxSelectComponent,\n    CxInputComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    NglModule,\n    FlexLayoutModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    StoreModule.forRoot({currencyconverter: updateCurrencyData})\n  ],\n  providers: [CurrencyOperationsService,CurrencyRequestService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormGroupDirective, ControlContainer } from '@angular/forms';\n\n@Component({\n  selector: 'app-cx-input',\n  templateUrl: './cx-input.component.html',\n  styleUrls: ['./cx-input.component.scss'],\n  viewProviders: [\n      {\n          provide: ControlContainer,\n          useExisting: FormGroupDirective\n      }\n  ]\n})\nexport class CxInputComponent implements OnInit {\n\n  constructor() { }\n  \n  @Input() formData: any;\n  @Input() f: any;\n  @Output() formClk = new EventEmitter();\n  \n  ngOnInit(): void {\n  }\n  \n  cxInputKeyup(e){     \n    this.formClk.emit(e);\n  }\n  \n\n}\n","<div  class=\"slds-form-element\" [ngClass]=\"{'slds-has-error':f[formData.key]?.invalid && (f[formData.key]?.dirty || f[formData.key]?.touched)}\">\n    <label class=\"slds-form-element__label\" [for]=\"formData.id\">{{formData.label}}</label>\n    <div class=\"slds-form-element__control\">\n       <input ngl [type]=\"formData.type\" [formControlName]=\"formData.key\" [required]=\"true\" [disabled]=\"\"  [placeholder]=\"formData.placeholder\"  [id]=\"formData.id\"  aria-describedby=\"error-message-unique-id\" class=\"slds-input\" aria-invalid=\"true\"  (keyup)=\"cxInputKeyup($event)\" [(ngModel)]=\"formData.value\" [(value)]=\"formData.value\"/>\n    </div>\n    <div class=\"slds-form-element__help\" *ngIf=\"f[formData.key]?.invalid && (f[formData.key]?.dirty || f[formData.key]?.touched)\"><div *ngIf=\"f[formData.key]?.errors?.required\">{{formData.customValidate.msg1}}</div></div>\n    <div class=\"slds-form-element__help\" *ngIf=\"!f[formData.key]?.errors?.required && f[formData.key]?.errors?.invalidCurrency && (f[formData.key]?.dirty || f[formData.key]?.touched)\">{{formData.customValidate.msg2}}</div>\n </div>","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators, ControlContainer, FormGroupDirective } from '@angular/forms';\n\n@Component({\n  selector: 'app-cx-select',\n  templateUrl: './cx-select.component.html',\n  styleUrls: ['./cx-select.component.scss'],\n  viewProviders: [\n    {\n        provide: ControlContainer,\n        useExisting: FormGroupDirective\n    }\n]\n})\nexport class CxSelectComponent implements OnInit {\n\n  constructor() { }\n\n  @Input() formData: any;\n  @Input() f: any;\n  @Output() formClk = new EventEmitter();\n  \n  ngOnInit(): void {\n  }\n  \n  cxInputKeyup(e){     \n    this.formClk.emit(e);\n  } \n}\n","<div class=\"slds-form-element\" [ngClass]=\"{'slds-has-error':f[formData.key]?.invalid && (f[formData.key]?.dirty || f[formData.key]?.touched)}\">\n   <label class=\"slds-form-element__label\" for=\"select-01\"  fxHide.xs=\"true\"></label>\n   <div class=\"slds-form-element__control\">\n      <div class=\"slds-select_container m-t-5\">\n         <select ngl [formControlName]=\"formData.key\" (change)=\"cxInputKeyup($event)\" aria-describedby=\"error-01\" class=\"slds-select\" id=\"select-01\" required=\"\"  [(ngModel)]=\"formData.value\" [(value)]=\"formData.value\">\n         <option  *ngFor=\"let opt of formData.options\" value=\"{{opt.key}}\" >{{opt.value}}</option>               \n         </select>\n      </div>\n   </div>\n   <div class=\"slds-form-element__help\" id=\"error-01\" *ngIf=\"f[formData.key]?.invalid && (f[formData.key]?.dirty || f[formData.key]?.touched)\">{{formData.customValidate.msg1}}</div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { CurrencyConverter} from '../models/currency-converter.model';\nimport { CurrencyOperationsService } from '../services/currency-operations.service'\nimport { Observable } from 'rxjs';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { CurrencyConverterState } from '../store/currency-converter.state';\nimport { Store } from '@ngrx/store';\nimport { currencyConverterValidator} from '../validators/currency-converter-validator';\nimport * as currJsonData from '../../assets/CURRENCY_CONVERT.json';\n\n@Component({\n  selector: 'app-currency-converter-form',\n  templateUrl: './currency-converter-form.component.html',\n  styleUrls: ['./currency-converter-form.component.scss']\n})\nexport class CurrencyConverterFormComponent implements OnInit {\n\n  currConvFrm: FormGroup;\n  toCurVal: any;\n  getConvertVal: any;\n  formData: any;  \n\n  constructor(private formBuilder: FormBuilder,private curOprApi : CurrencyOperationsService,private store: Store<CurrencyConverterState>) { \n       \n  }\n\n  ngOnInit(): void {\n    this.cxRenderCurrForm(currJsonData);\n    this.currConvFrm = this.cxGetCurrencyFrmVals(); \n    this.cxSetDisableFrmField(\"cu_to_amt\")\n    \n  }\n  cxRenderCurrForm(resData) {    \n    this.formData = resData.default;    \n  }\n  cxUpdateCurrencyStore(frmCurVal:any, toCurVal:any,frmCurSelected:any,toCurSelected:any) {\n    this.store.dispatch({\n      type: 'CALC_CURR',\n      curvalues: <CurrencyConverter> {\n        frmCurVal:frmCurVal,\n        toCurVal:toCurVal,\n        frmCurSelected:frmCurSelected,\n        toCurSelected:toCurSelected\n      }\n    });\n  }\n \n  \n  getFromCurr(e) { \n    \n    this.curOprApi.setCurrencyVal(this.currConvFrm)\n    .subscribe(upCurrVal => {\n        this.getConvertVal = this.curOprApi.getCurConverted(upCurrVal,this.currConvFrm.value.cu_from_amt,this.currConvFrm.value.cu_from_curr)       \n        this.cxUpdateCurrencyStore( this.currConvFrm.value.cu_from_amt,this.getConvertVal,this.currConvFrm.value.cu_from_curr,this.currConvFrm.value.cu_to_curr);\n        this.store.subscribe(s => {\n          this.currConvFrm.patchValue({\n              cu_to_amt: s.currencyconverter['toCurVal']\n              \n            });\n         \n        } );\n      }, err => {\n      \n    });    \n\n  }\n  \n  cxGetCurrencyFrmVals(){ \n   \n    return this.formBuilder.group({\n        cu_from_amt: ['', [Validators.required,currencyConverterValidator]],\n        cu_from_curr: ['', Validators.required],\n        cu_to_amt: ['', ''],\n        cu_to_curr: ['', [Validators.required]]      \n    });\n  }\n  cxSetDisableFrmField(fldId){ \n    this.currConvFrm.reset({\n    [fldId]: {value: '', disabled: true}      \n    });\n  }\n  get f() {     \n    return this.currConvFrm.controls; \n  }\n\n  \n}\n","<form [formGroup]=\"currConvFrm\" class=\"currency-converter__formblock\" fxLayout=\"column\" fxLayoutAlign=\"start stretch\" fxLayoutGap=\"5px\" fxFlex=\"none\">\n   <div fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"start start\" fxLayoutGap.xs=\"0\">\n      <h1 class=\"text-15\">{{formData.frmBlkTits.blk1Tit}}</h1>\n   </div>\n   <div fxLayout=\"row wrap\"  fxLayoutAlign=\"start start\" fxLayoutGap.xs=\"0\">\n      <app-cx-input  fxFlex=\"79%\" fxFlex.xs=\"100%\" [formData]=\"formData.frmBlk[0]\" [f]=\"f\" (formClk)='getFromCurr($event)' class=\"mb-p-n p-r-10\"></app-cx-input>\n      <app-cx-select fxFlex=\"21%\" fxFlex.xs=\"100%\" [formData]=\"formData.frmBlk[1]\" [f]=\"f\" (formClk)='getFromCurr($event)'></app-cx-select>\n   </div>\n   <div fxLayout=\"row wrap\" fxLayoutAlign=\"start start\" fxLayoutGap.xs=\"0\">\n      <app-cx-input  fxFlex=\"79%\" fxFlex.xs=\"100%\" [formData]=\"formData.frmBlk[2]\" [f]=\"f\" (formClk)='getFromCurr($event)' class=\"mb-p-n p-r-10\" ></app-cx-input>\n      <app-cx-select fxFlex=\"21%\" fxFlex.xs=\"100%\" [formData]=\"formData.frmBlk[3]\" [f]=\"f\" (formClk)='getFromCurr($event)'></app-cx-select>\n   </div>\n   <div fxLayout=\"row\" fxLayout.xs=\"column\" fxLayoutAlign=\"end end\" fxLayoutGap.xs=\"0\">\n      <a class=\"currency-converter__link p-t-10 text-12\" target=\"_blank\" [href]=\"formData.frmBlkFoot.blk1Link\" [innerHTML]=\"formData.frmBlkFoot.blk1Txt\"></a>       \n   </div>\n</form>","import { Injectable } from '@angular/core';\nimport { CurrencyRequestService } from '../services/currency-request.service';\nimport { CurrencyConverter } from '../models/currency-converter.model';\nimport { Observable } from 'rxjs';\nimport { FormGroup } from '@angular/forms';\nimport { environment } from './../../environments/environment';\n\n@Injectable()\nexport class CurrencyOperationsService {\n\n  constructor(private curReqApi: CurrencyRequestService) { }\n\n  setCurrencyVal(curReqVals : FormGroup) : Observable< CurrencyConverter>{\n    \n    const newCurData =  { symbols:curReqVals.value.cu_from_curr,base:curReqVals.value.cu_to_curr};\n    return this.curReqApi.getApiData(environment.url,newCurData);\n  }\n\n  getCurConverted(curReqVals:any,CurSelAmt:any,CurSelVals:string) { \n      return curReqVals.rates[CurSelVals] * CurSelAmt;   \n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { CurrencyConverter,CurrencyApiParms} from '../models/currency-converter.model';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class CurrencyRequestService {\n\n  constructor(private httpClient : HttpClient) { }\n\n  getApiData(curApiUrl : string,curData : CurrencyApiParms) : Observable<CurrencyConverter>{  \n    \n    const  queryString = Object.keys(curData).map(key => key + '=' + curData[key]).join('&');    \n    return this.httpClient.get<CurrencyConverter>(curApiUrl+queryString);       \n  }\n\n}\n","import { CurrencyConverter } from '../models/currency-converter.model';\r\nimport { Action } from '@ngrx/store';\r\n\r\nexport const CALC_CURR = 'CALC_CURR';\r\n\r\nexport function updateCurrencyData(state: CurrencyConverter[] , action) {\r\n\r\n  switch (action.type) {\r\n    case CALC_CURR:        \r\n        return action.curvalues;              \r\n    default:\r\n        return state;\r\n    }\r\n}","import { AbstractControl } from '@angular/forms'\r\n\r\nexport function currencyConverterValidator (\r\n  control: AbstractControl\r\n): { [key: string]: any } | null {\r\n\r\n  const valid = /^\\$?[0-9][0-9,]*[0-9]\\.?[0-9]{0,2}$/i.test(control.value)\r\n  console.log(valid)\r\n  return valid  ? null  : { invalidCurrency: { valid: false, value: control.value } }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  url:'https://api.exchangeratesapi.io/latest?'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}